If **FROTATE_NUMBER** is set to 0, file rotation will be disabled and logs
will be printed into specified file without size limit. The only size limit
is the one presented by the filesystem and architecture.

If this value is bigger than 0, file rotation will be enabled. All
files will have suffixes added to name set in **path**. For example,
*program.log.0*. Files are enumareted from *.0* to *.n*, where *n* is
set rotate number. File with suffix *.0* is the oldest one, and the
higher the number, the newer the file is. If logger reaches maximum
number of files, oldest one with suffix *.0* will be deleted and
suffixes of the files will be decremented by 1 (ie. *log.1* will be
renamed to *log.0*, *log.2* will be renamed to *log.1* and so on).

User can also pass 1 here, but if file reaches its size limit, it
will be deleted and printing will continue from the empty file

When *number* is bigger than 10, padded zeroes will be added to
rotated logs like *log.02*, *log.004*\ or *log.076*. Actual number of
padded zeroes depends in *number* passed. For bigger than 10 it will
be 1 zero, for bigger than 100 it will be 0 zeroes and so on. This is
done to ease up sorting when one would want to concat all files with
one simple **cat \***.

Example file listing after multiple rotations may look like this::

   $ ls -l /tmp/embedlog-example
   total 20K
   lrwxrwxrwx 1 lm- family   5 mar  1 19:50 log -> log.4
   -rw-r----- 1 lm- family 496 mar  1 19:50 log.0
   -rw-r----- 1 lm- family 470 mar  1 19:50 log.1
   -rw-r----- 1 lm- family 496 mar  1 19:50 log.2
   -rw-r----- 1 lm- family 470 mar  1 19:50 log.3
   -rw-r----- 1 lm- family 496 mar  1 19:50 log.4
